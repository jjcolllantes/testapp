#Descarga de NodeJS Package
#https://nodejs.org/en/download/current/
#https://create-react-app.dev/docs/getting-started/
#Para Limpiar cache
npx clear-npx-cache
#Para Crear Aplicacion
npx create-react-app cliente
#entramos a la carpeta cliente
cd cliente/
#ejecutamos la Aplicacion
npm start
#Instalar el paquete React Router Dom
npm install react-router-dom

#para crear el server JS primero se crea el archivo server.js en la raiz al mismo #nivel de la caprpeta cliente por debajo de crud_mern_stack
#Debemos de ubicarnos en la raiz de la aplicacion /crud_mern_stack
#se crea un package.json para el server.js
npm init
#Luego instalamos express
npm install express
#para correr node se ejecuta el comando
node server.js
#para que node corra constantemen y detecte cambios instalamos lo siguiente.
 npm install nodemon
#De ahi en adelante ya no ejecuto node server.js sino el siguiente comando:
npx nodemon server.js

#Para instalar MONGODB
brew tap mongodb/brew
brew search mongodb-community
install mongodb-community
brew services list
brew services start mongodb-community
brew services list

#para instalar el dirver de mondb para node
#hay que parar el server con ctrl+c
npm install mongoose

#para instalar uniqid en el frontend
#se debe de parar la ejecucion
npm install uniqid

#para instalar axios en el frontend
#se debe de parar la ejecucion
npm install axios

#para instalar body-parse en el backend para poder capturar los valores ingresados #en el formulario y enviados al back end
#se debe de parar la ejecucion del backend
npm install body-parse

#Para instalar sweet alert, primero se debe de detener el frontend
npm install sweetalert2

Para Cargar los archivos al githb
git init

git add .
git commit -m "first commit"
#Se aÃ±ade una vez
#git remote add origin https://github.com/jjcolllantes/testapp.git
git push -u origin master
#Para ver los commit realizados y viajar en el tiempo con checkout
git log --oneline --decorate --all --graph
* bf55e70 (HEAD -> master, origin/master) cambios en comandoNode.txt
* d085105 solucion key item
* 9fa7bf0 actualizacion
* ce16307 first commit
git checkout ce16307
#Para retroceder en la linea del tiempo pero no eliminando los archivos modificados en los anteriores commit, con --hard si se eliminan
git reset --mixed ce16307                 
#para ver la actividad de todo lo realizados
git reflog

618bfb2 (HEAD, origin/master, master) HEAD@{0}: reset: moving to 618bfb2
ce16307 HEAD@{1}: reset: moving to ce16307
618bfb2 (HEAD, origin/master, master) HEAD@{2}: checkout: moving from ce16307fbb979bc158af4cd71d740e13bff87f22 to 618bfb2
ce16307 HEAD@{3}: checkout: moving from master to ce16307
618bfb2 (HEAD, origin/master, master) HEAD@{4}: commit: =comandos modificados
bf55e70 HEAD@{5}: commit: cambios en comandoNode.txt
d085105 HEAD@{6}: commit: solucion key item
9fa7bf0 HEAD@{7}: commit: actualizacion
ce16307 HEAD@{8}: commit (initial): first commit
#Borra el commit especificado en el idcommit y crea un commit nuevo
git revert {idcommit} 

#Para ver ramas
git branch
#Para crear una rama
git branch developer
#Para cambiarse de rama
git checkout developer